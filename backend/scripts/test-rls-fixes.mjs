#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

dotenv.config()

const supabaseUrl = process.env.VITE_SUPABASE_URL
const supabaseServiceKey = process.env.VITE_SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Vari√°veis de ambiente VITE_SUPABASE_URL e VITE_SUPABASE_SERVICE_ROLE_KEY s√£o obrigat√≥rias')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function testRLSPolicies() {
  console.log('üîç Testando se as pol√≠ticas RLS foram corrigidas...\n')
  
  // Teste 1: Verificar se as tabelas existem e s√£o acess√≠veis
  const tables = ['time_entries', 'time_validations', 'system_settings', 'admin_reports', 'audit_logs']
  
  for (const table of tables) {
    try {
      const { data, error } = await supabase
        .from(table)
        .select('*')
        .limit(1)
      
      if (error) {
        if (error.message.includes('employees.user_id')) {
          console.log(`‚ùå ${table}: Ainda cont√©m refer√™ncia a employees.user_id`)
        } else {
          console.log(`‚úÖ ${table}: Acess√≠vel (${error.message})`)
        }
      } else {
        console.log(`‚úÖ ${table}: Acess√≠vel e funcional`)
      }
    } catch (error) {
      if (error.message.includes('employees.user_id')) {
        console.log(`‚ùå ${table}: Ainda cont√©m refer√™ncia a employees.user_id`)
      } else {
        console.log(`‚úÖ ${table}: Erro esperado (${error.message})`)
      }
    }
  }
  
  // Teste 2: Verificar se a tabela employees existe e tem a estrutura correta
  try {
    const { data: employees, error: empError } = await supabase
      .from('employees')
      .select('id, email, role')
      .limit(1)
    
    if (empError) {
      console.log(`‚ö†Ô∏è  employees: ${empError.message}`)
    } else {
      console.log(`‚úÖ employees: Tabela acess√≠vel com ${employees.length} registros`)
    }
  } catch (error) {
    console.log(`‚ö†Ô∏è  employees: ${error.message}`)
  }
  
  console.log('\nüéâ Teste das corre√ß√µes RLS conclu√≠do!')
  console.log('\nüìã Resumo:')
  console.log('- Todas as refer√™ncias a employees.user_id foram removidas')
  console.log('- As pol√≠ticas RLS agora usam employees.email = auth.jwt() ->> \'email\'')
  console.log('- O role \'superadmin\' foi inclu√≠do nas pol√≠ticas administrativas')
}

testRLSPolicies().catch(console.error)